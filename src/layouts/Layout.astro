---
interface Props {
	title: string;
}

const { title } = Astro.props;
import NavBar from "../components/NavBar.astro";
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<script>
			// On page load or when changing themes, best to add inline in `head` to avoid FOUC
			if (
				localStorage.getItem("color-theme") === "dark" ||
				(!("color-theme" in localStorage) &&
					window.matchMedia("(prefers-color-scheme: dark)").matches)
			) {
				document.documentElement.classList.add("dark");
			} else {
				document.documentElement.classList.remove("dark");
			}
		</script>
		<title>{title}</title>
	</head>
	<body class="bg-gray-900 min-h-screen pb-32">
		<NavBar>
			<button
				id="theme-toggle"
				type="button"
				class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5"
			>
				<svg
					id="theme-toggle-dark-icon"
					class="hidden w-5 h-5"
					fill="currentColor"
					viewBox="0 0 20 20"
					xmlns="http://www.w3.org/2000/svg"
					><path
						d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
					></path></svg
				>
				<svg
					id="theme-toggle-light-icon"
					class="hidden w-5 h-5"
					fill="currentColor"
					viewBox="0 0 20 20"
					xmlns="http://www.w3.org/2000/svg"
					><path
						d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
						fill-rule="evenodd"
						clip-rule="evenodd"></path></svg
				>
			</button>
		</NavBar>
		<main class="max-w-5xl px-4 m-auto">
			<slot />
		</main>
	</body>
	<script>
		var themeToggleDarkIcon = document.getElementById(
			"theme-toggle-dark-icon",
		);
		var themeToggleLightIcon = document.getElementById(
			"theme-toggle-light-icon",
		);

		// Change the icons inside the button based on previous settings
		if (
			localStorage.getItem("color-theme") === "dark" ||
			(!("color-theme" in localStorage) &&
				window.matchMedia("(prefers-color-scheme: dark)").matches)
		) {
			themeToggleLightIcon.classList.remove("hidden");
		} else {
			themeToggleDarkIcon.classList.remove("hidden");
		}

		var themeToggleBtn = document.getElementById("theme-toggle");

		themeToggleBtn.addEventListener("click", function () {
			// toggle icons inside button
			themeToggleDarkIcon.classList.toggle("hidden");
			themeToggleLightIcon.classList.toggle("hidden");

			// if set via local storage previously
			if (localStorage.getItem("color-theme")) {
				if (localStorage.getItem("color-theme") === "light") {
					document.documentElement.classList.add("dark");
					localStorage.setItem("color-theme", "dark");
				} else {
					document.documentElement.classList.remove("dark");
					localStorage.setItem("color-theme", "light");
				}

				// if NOT set via local storage previously
			} else {
				if (document.documentElement.classList.contains("dark")) {
					document.documentElement.classList.remove("dark");
					localStorage.setItem("color-theme", "light");
				} else {
					document.documentElement.classList.add("dark");
					localStorage.setItem("color-theme", "dark");
				}
			}
		});

		import { Modal } from "flowbite";

		// select the two elements that we'll work with
		const $buttonElement: HTMLElement | null =
			document.querySelector("#button");
		const $modalElement: HTMLElement | null =
			document.querySelector("#defaultModal");

		// create a new modal component
		const modal = new Modal($modalElement);

		// toggle the visibility of the modal when clicking on the button
		if ($buttonElement) {
			$buttonElement.addEventListener("click", () => modal.toggle());
		}
	</script>
	<footer class="bg-white rounded-lg shadow dark:bg-gray-900 m-4">
		<div class="w-full max-w-screen-xl mx-auto p-4 md:py-8">
			<div class="sm:flex sm:items-center sm:justify-between">
				<a
					href="/"
					class="flex items-center mb-4 sm:mb-0 space-x-3 rtl:space-x-reverse"
				>
					<img src="/TaskIcon.svg" class="h-14" alt="AntiPN Logo" />
					<span
						class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
						>Anti PN</span
					>
				</a>
				<ul
					class="flex flex-wrap items-center mb-6 text-sm font-medium text-gray-500 sm:mb-0 dark:text-gray-400"
				>
					<li>
						<a href="/about" class="hover:underline me-4 md:me-6"
							>Acerca de</a
						>
					</li>
					<li>
						<a href="/Policy" class="hover:underline me-4 md:me-6"
							>Politicas y privacidad</a
						>
					</li>
					<li>
						<a
							href="/Licensing"
							class="hover:underline me-4 md:me-6">Licencia</a
						>
					</li>
					<li>
						<a href="mailto:" class="hover:underline">Contacto</a>
					</li>
				</ul>
			</div>
			<hr
				class="my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8"
			/>
			<span
				class="block text-sm text-gray-500 sm:text-center dark:text-gray-400"
				>Â© 2023 <a href="https://flowbite.com/" class="hover:underline"
					>Anti PN</a
				>. All Rights Reserved.</span
			>
		</div>
	</footer>
</html>
<style is:global>
	* {
	}
	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
		color-scheme: dark light;
	}
</style>
